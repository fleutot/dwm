owm - a clone of dwm
====================

Very much work in progress.

TODO:
- consider using `XAddToSaveSet`

dwm - dynamic window manager
============================
dwm is an extremely fast, small, and dynamic window manager for X.


Requirements
------------
In order to build dwm you need the Xlib header files.
Ubuntu: libxft-dev


Installation
------------
Edit config.mk to match your local setup (dwm is installed into
the /usr/local namespace by default).

Afterwards enter the following command to build and install dwm (if
necessary as root):

    make clean install


Running dwm
-----------
In order to connect dwm to a specific display, make sure that
the DISPLAY environment variable is set correctly, e.g.:

    DISPLAY=foo.bar:1 exec dwm

(This will start dwm on display :1 of the host foo.bar.)

In order to display status info in the bar, you can do something
like this in your .xinitrc:

    while xsetroot -name "`date` `uptime | sed 's/.*,//'`"
    do
    	sleep 1
    done &
    exec dwm

Debugging
---------
You can run owm in a VT (your usual environment), and have its DISPLAY set to
another VT

In .xinitrc:
```
unset XDG_RUNTIME_DIR && xhost +local: && tail -f /dev/null
```

Then run `startx` from another VT.

From your usual environment, you can now run owm with gdb:

```
DISPLAY=:1 gdb ./dwm
```

You can also nest an X within your normal environment. This starts two
screens with Xinerama:

```
Xephyr +xinerama +extension RANDR -screen 800x600+0+0 -screen 800x600+800+0 -ac :1&
```
Note that `xrandr` fails to detect these as two screens.

Good to know:
- kill a rogue Xserver on display N: `sudo fuser /tmp/.X11-unix/X<N> -k`


Configuration
-------------
The configuration of dwm is done by creating a custom config.h
and (re)compiling the source code.
